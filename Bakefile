#!/bin/bash -eu

SRC_DIR="src"
DIST_DIR="dist"

build() {
  mkdir -p "$DIST_DIR"
  cp -r "$SRC_DIR"/* "$DIST_DIR"/
  optimize
}

format() {
  prettier --write "$SRC_DIR" 
}

serve() {
  cd "$SRC_DIR"
  waiter --dev
}

clean() {
  rm -rf "$DIST_DIR"
  rm -rf node_modules package-lock.json
}

optimize() {
  SCALE_DOWN="convert {} -resize 600x> {}"
  OPTIMIZE_PNG="optipng -strip all -clobber -preserve {} -out {}"
  OPTIMIZE_JPG="jpegoptim --strip-all --all-progressive --preserve {}"
  
  find "$DIST_DIR" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" \) -exec $SCALE_DOWN \;
  find "$DIST_DIR" -type f -iname "*.png" -exec $OPTIMIZE_PNG \; 
  find "$DIST_DIR" -type f \( -iname "*.jpg" -o -iname "*.jpeg" \) -exec $OPTIMIZE_JPG \;
}

new() {
  p:get "Title" title
  p:get_with_default "Language" lang "en"
  p:get_with_default "Path" path "$(p:sluggify "$title")" 

  p:render "$SRC_DIR" "$path" "$title" "$lang" "<!--CONTENT HERE -->"
}

publish() {
  if [ -e "$1" ]; then
    p:get "Title" title
    p:get_with_default "Date" date "$(date +"%Y-%m-%d")"
    p:get_with_default "Language" lang "en"

    export DATE="$date"
    export URL="blog/$(basename "$1" ".html")"

    content="$(p:append_post_footer "$1")"

    p:render "$SRC_DIR" "$URL" "$title" "$lang" "$content" 
    p:append_to_index
    p:append_to_rss
  else
    echo >&2 "Error: file '$1' doesn't exist."
    echo >&2
    exit 1
  fi
}

p:get() {
  [ -v $2 ] && return

  printf "\n$1: "
  read $2

  if [ "${!2}" = "" ]; then
    echo >&2 "Error: you didn't provide $1."
    echo >&2
    exit 1 
  fi
}

p:get_with_default() {
  [ -v $2 ] && return

  printf "\n$1 [$3]: "
  read $2

  if [ "${!2}" = "" ]; then
    eval "$2='$3'"
  fi
}

p:sluggify() { 
  echo "$1" | tr '[:upper:]' '[:lower:]' | tr -cs '[:alnum:]' '-' | sed 's/-$//'
}

p:render() {
  export TITLE="$3"
  export LANG="$4"
  export URL="$2"
  export CONTENT="$5"

  path="$1/$2.html"

  if [ -e "$path" ]; then
    echo >&2 "Error: file '$path' already exists."
    echo >&2 
    exit 1
  fi

  mkdir -p "$(dirname "$path")"
  cat TEMPLATE.html | envsubst > "$path" 
  e "$path"
}

p:append_post_footer() {
  CONTENT=$(cat <<EOF
    $(cat "$1")

    <footer>
      <p>
	Posted on
	<a href="//roblog.nl/$URL">
	  <time datetime="$(date -d "$DATE" +"%Y-%m-%d")">
	    $(date -d "$DATE" +"%b %d, %Y")
	  </time>
	</a>
      </p>

      <p class="reply-by-email">
        <a href="mailto:axcelott@roblog.nl">
	  Reply by email
	</a>
      </p>
    </footer>
EOF
)

echo "$CONTENT"
}

p:append_to_index() {
  H_ENTRY=$(cat <<EOF
    <tr class="h-entry">
      <td class="p-title">
        <a class="u-url" href="/$URL">
          $TITLE
        </a>
      </td>
      <td>
        <time class="dt-published" datetime="$(date -d "$DATE" +"%Y-%m-%d")">
          $(date -d "$DATE" +"%b %d, %Y")
        </time>
      </td>
    </tr>
EOF
)

sed '/<\!-- INSERT NEW POSTS HERE -->/a' "$H_ENTRY" "$SRC_DIR/blog.html"
}

p:append_to_rss() {
  RSS_ENTRY=$(cat <<EOF
    <item>
      <title>$TITLE</title>
      <link>https://roblog.nl/$URL</link>
      <pubDate>$(date -d "$DATE" +%d %b %Y) 12:00:00 +0100</pubDate>
      <guid>https://roblog.nl/$URL</guid>
      <content:encoded>
        <![CDATA[
        $CONTENT
        ]]>
      </content:encoded>
    </item>
EOF
)

sed '/<\!-- INSERT NEW POSTS HERE -->/a' "$RSS_ENTRY" "$SRC_DIR/index.xml"
}

